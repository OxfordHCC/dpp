import React from 'react';
import ReactDOM from 'react-dom';
import Navigo from 'navigo';
import thunk from 'redux-thunk';
import {Provider} from 'react-redux';
import { createStore, applyMiddleware } from 'redux';
import './index.css';
import reducers from './reducers';
import * as serviceWorker from './serviceWorker';
import Settings from './container/settings';
import History from './container/history';
import Main from './container/main';

const router = new Navigo(null, true); //root:null, usehash true
const appRoot = document.getElementById('root');

export const store = createStore(reducers, applyMiddleware(thunk));
registerRoute('settings', Settings);
registerRoute('main', Main);
registerRoute('history/:date', History);
registerRoute('history', History, {date: new Date().toISOString().split('T')[0]});
router.on(() => router.resolve('/main'));
router.resolve();

function registerRoute(path, component, defaultParams = {}){
    router.on(path, (params, query)=>{
        console.log('received route', path, params, query, defaultParams);
        renderPage(component, Object.assign({}, defaultParams, params));
    });
}


function renderPage(Component, params){
    ReactDOM.render(
        <Provider store={store}>
            {<Component params={params}/>}
        </Provider>,
        appRoot
    );
}

// If you want your app to work offline and load faster, you can change
// unregister() to register() below. Note this comes with some pitfalls.
// Learn more about service workers: https://bit.ly/CRA-PWA
serviceWorker.unregister();
